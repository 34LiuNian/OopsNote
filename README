# 错题整理助手 (WqOrganizer) ✨

一个使用 Python、Telegram Bot 和 AI (Gemini) 来帮助整理错题的工具。

## 🚀 功能

*   **Telegram Bot 交互**: 通过 Telegram 发送错题图片和描述。
*   **AI 分析**: 利用 Google Gemini 模型分析图片中的题目、解答和错误。
*   **自动整理**: 将分析结果和图片保存为结构化的 Markdown 文件。
*   **异步处理**: 使用 `asyncio` 处理并发任务，响应更迅速。

## 🛠️ 安装与设置

1.  **克隆仓库**
    ```bash
    git clone https://github.com/34LiuNian/OopsNote.git
    cd OopsNote
    ```
2.  **创建虚拟环境** (推荐)
    ```bash
    python -m venv venv
    # Windows
    .\venv\Scripts\activate
    # macOS/Linux
    source venv/bin/activate
    ```
3.  **安装依赖**
    ```bash
    pip install -r requirements.txt
    ```
    *注意: 你可能需要先创建一个 `requirements.txt` 文件，包含 `python-telegram-bot`, `google-generativeai`, `pydantic`, `python-dotenv` 等依赖。*

4.  **配置环境变量**
    *   创建一个 `.env` 文件 (参考 `config.py` 中的 `Env` 类)。
    *   在 `.env` 文件中设置你的 `API_KEY` 和 `TELEGRAM_TOKEN`。
        ```dotenv
        # .env
        API_KEY="YOUR_GEMINI_API_KEY"
        TELEGRAM_TOKEN="YOUR_TELEGRAM_BOT_TOKEN"
        # MODEL="gemini-1.5-flash" # 或者你使用的模型
        ```

## ▶️ 运行

```bash
python main.py
```

程序启动后，Telegram Bot 和请求处理程序将开始运行。你可以向你的 Telegram Bot 发送带有描述（可选）的错题图片。

## 📁 项目结构 (简化)

```
.
├── core.py           # AI 生成核心逻辑
├── telegram_bot.py   # Telegram Bot 类
├── main.py           # 主程序入口
├── models.py         # Pydantic 数据模型
├── config.py         # 配置加载
├── markdown.py       # Markdown 文件保存 (如果独立)
├── requirements.txt  # 依赖列表
├── .env              # 环境变量 (需要自行创建)
├── data/             # 数据存储目录
│   ├── telegram_bot/ # Telegram 接收的图片
│   └── markdown/     # 生成的 Markdown 文件
└── README.md         # 就是这个文件
```

---

祝使用愉快！